<%
  deprecated  = @item.has_tag?(:deprecated)
  private_api = @item.has_tag?(:api) && @item.tag(:api).text == 'private'
  alias_of    = nil
  visibility  = @item.visibility

  synopsis    = docstring_summary(@item)

  classes = ["attr-visibility-#{visibility}"]

  if deprecated
    classes << 'attribute-deprecated'
  end
  if private_api
    classes << 'attribute-private-api'
  end
  if alias_of
    classes << 'attribute-alias'
  end
%>

<div class="summary-row <%= classes.join(' ') %>">
  <% link_title = @item.is_a?(YARD::CodeObjects::MethodObject) ? "#{ h(@item.name(true)) } (#{ @item.scope } #{ @item.type })" : "#{ h(@item.name) } (#{ @item.type })" %>
  <a href="<%= url_for(@item) %>" title="<%= link_title %>">
    <div class="summary-signature">
      <%= erb(:signature) %>

      <% if alias_of %>
        <span> alias of </span>
      <% end %>

      <span class='attributes-list'>
        <% if deprecated %>
          <span class="attribute-container" data-attribute-type="api" data-attribute-type="deprecated"><span class='attribute-type'>API</span><span class='attribute-value'>Deprecated</span></span>
        <% end %>
        <% if private_api %>
          <span class="attribute-container" data-attribute-type="api" data-attribute-type="private"><span class='attribute-type'>API</span><span class='attribute-value'>Private</span></span>
        <% end %>

        <% if visibility != :public %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="<%= visibility %>"><span class='attribute-type'>Ruby</span><span class='attribute-value'><%= visibility %></span></span>
        <% end %>

        <% if @item.constructor? %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="constructor"><span class='attribute-type'>Ruby</span><span class='attribute-value'>constructor</span></span>
        <% end %>

        <% if @item.has_tag?(:abstract) %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="abstract"><span class='attribute-type'>Ruby</span><span class='attribute-value'>abstract</span></span>
        <% end %>

        <% if rw = @item.attr_info %>
          <% if !run_verifier([rw[:read]].compact).empty? && run_verifier([rw[:write]].compact).empty? %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="readonly"><span class='attribute-type'>Ruby</span><span class='attribute-value'>readonly</span></span>
          <% end %>
          <% if !run_verifier([rw[:write]].compact).empty? && run_verifier([rw[:read]].compact).empty? %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="writeonly"><span class='attribute-type'>Ruby</span><span class='attribute-value'>writeonly</span></span>
          <% end %>
        <% end %>

      </span>
    </div>

    <% if !alias_of %>
      <div class="summary-synopsis"><%= htmlify_line(synopsis) %></div>
    <% end %>
  </a>
</div>

<%
<<-COMMENT
%>
  <% if @item.aliases.size > 0 %>
    (also: <%= @item.aliases.map {|o| h(o.name(true)) }.join(", ") %>)
  <% end %>
  <% if object != @item.namespace %>
    <span class="note title not_defined_here">
      <%= @item.namespace.type == :class ? 'inherited' : (@item.scope == :class ? 'extended' : 'included') %>
      from <%= linkify @item, object.relative_path(@item.namespace) %>
    </span>
  <% end %>
<%
COMMENT
%>
