<%
  synopsis     = docstring_summary(@item)
  alias_target = Yard::Kit::Services::Methods.get_alias_target(method: @item)

  deprecated   = @item.has_tag?(:deprecated)
  private_api  = @item.has_tag?(:api) && @item.tag(:api).text == 'private'
  visibility   = @item.visibility

  sumary_row_classes = ["attr-visibility-#{visibility}"]
  if deprecated
    sumary_row_classes << 'attribute-deprecated'
  end
  if private_api
    sumary_row_classes << 'attribute-private-api'
  end

  link_title = @item.is_a?(YARD::CodeObjects::MethodObject) ? "#{ h(@item.name(true)) } (#{ @item.scope } #{ @item.type })" : "#{ h(@item.name) } (#{ @item.type })"
  link_href  = url_for(alias_target || @item)
%>

<div class="summary-row <%= sumary_row_classes.join(' ') %>">
  <a href="<%= link_href %>" title="<%= link_title %>">
    <div class="summary-signature">
      <% @signature_item = @item %>
      <%= erb(:signature) %>

      <% if @item.is_alias? %>
        <span>&#x21d2;</span>
        <% if alias_target %>
          <% @signature_item = alias_target %>
          <%= erb(:signature) %>
        <% else %>
            Unknown
        <% end %>
      <% end %>

      <span class='attributes-list'>
        <% if deprecated %>
          <span class="attribute-container" data-attribute-type="api" data-attribute-type="deprecated"><span class='attribute-type'>API</span><span class='attribute-value'>Deprecated</span></span>
        <% end %>
        <% if private_api %>
          <span class="attribute-container" data-attribute-type="api" data-attribute-type="private"><span class='attribute-type'>API</span><span class='attribute-value'>Private</span></span>
        <% end %>

        <% if visibility != :public %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="<%= visibility %>"><span class='attribute-type'>Ruby</span><span class='attribute-value'><%= visibility %></span></span>
        <% end %>

        <% if @item.constructor? %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="constructor"><span class='attribute-type'>Ruby</span><span class='attribute-value'>constructor</span></span>
        <% end %>

        <% if @item.has_tag?(:abstract) %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="abstract"><span class='attribute-type'>Ruby</span><span class='attribute-value'>abstract</span></span>
        <% end %>

        <% if rw = @item.attr_info %>
          <% if !run_verifier([rw[:read]].compact).empty? && run_verifier([rw[:write]].compact).empty? %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="readonly"><span class='attribute-type'>Ruby</span><span class='attribute-value'>readonly</span></span>
          <% end %>
          <% if !run_verifier([rw[:write]].compact).empty? && run_verifier([rw[:read]].compact).empty? %>
          <span class="attribute-container" data-attribute-type="ruby" data-attribute-type="writeonly"><span class='attribute-type'>Ruby</span><span class='attribute-value'>writeonly</span></span>
          <% end %>
        <% end %>

      </span>
    </div>

    <% if !@item.is_alias? %>
      <div class="summary-synopsis"><%= htmlify_line(synopsis) %></div>
    <% end %>
  </a>
</div>

<%
<<-COMMENT
%>
  <% if object != @item.namespace %>
    <span class="note title not_defined_here">
      <%= @item.namespace.type == :class ? 'inherited' : (@item.scope == :class ? 'extended' : 'included') %>
      from <%= linkify @item, object.relative_path(@item.namespace) %>
    </span>
  <% end %>
<%
COMMENT
%>
